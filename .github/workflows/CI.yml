name: ftlog

on: [push, pull_request]

jobs:
  build_and_test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt

      - name: rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: check build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests --no-default-features

      - name: tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --no-fail-fast --no-default-features --release -- --nocapture 

  test_tsc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install latest cargo
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt

      - name: check build (feature:tsc)
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples --tests --features=tsc

      - name: tests (feature:tsc)
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --no-fail-fast --features=tsc --release -- --nocapture

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest cargo
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable

      - name: doc
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        with:
          command: doc
          args: --all --no-deps

  publish:
    name: Publish Package
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest cargo
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable

      - name: login
        env:
          SUPER_SECRET: ${{ secrets.CARGO_TOKEN }}
        run: cargo login "$SUPER_SECRET"
        shell: bash

      - name: publish
        uses: actions-rs/cargo@v1
        with:
          command: publish